OUTLINE | WIP Notes
===================

To do:
1. Go to new window
    a. Message box urging player to wait 2 seconds [DONE]
        i. Popup message [DONE]
        ii. 2 second wait while it searches server [DONE/UT]
        iii. Set this system to client if no other server [DONE/UT]
        iv. Move to server selection frame if there is already a server in the network [DONE/UT]
        v. If username already exists, popup and return, clear username field
2. Figure out how networking works = Result : Too complicated to do over internet (NAT Tunneling etc.). Try with just over local network for now.
    a. Socket programming : Simple client - server connection with localhost [DONE]
    b. Send multicast to local network with server's IP. [DONE]
    c. Enable ports 3000-3100 for TCP and UDP on firewall (testing purposes, will likely finalize 3003-5 as ports to use) [DONE]

NEXT STEPS
==========
Set up server detection on main app.
    Popup pages, duplicate detection, coding mostly complete.
    Current hiccup : Async peer listener setup seems to be blocking execution of everything else.
    Need to split duplicate user check into own function, and leave peer listener as is, without blocking anything else.
    ^ Needs FIX

Useful
======
TCP dump :
for multicast -
sudo tcpdump -i wlan0 -s0 -vv net 224.0.0.0/4
for all udp -
sudo tcpdump -i wlan0 -n udp
all UDP packets

Netcat
UDP
Listener : nc -ul 6111
Sender : nc -u <listener> 6111
then type something

Socat loopback broadcast on same system. Doesn't seem to work with 255, but can test on another system.
Send : socat - udp-sendto:127.255.255.255:3000,broadcast
Receive : socat -u udp-recv:3000,reuseaddr -
