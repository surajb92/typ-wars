OUTLINE | WIP Notes
===================

Progress:
1. Start with entering a username in Login window
    a. Message box urging player to wait 2 seconds [DONE]
        i. Popup message set up.
        ii. Set up screen to wait 1.5 seconds while it searches for peers.
        iii. System will be set to client if no other peer working as server.
        iv. Screen will move to server selection frame if there is already a server in the network.
        v. If username already exists, a warning will popup, exit login function & clear username field.
        vi. Removed multicast loop to avoid duplicate username shenanigans, but now requires at least 2 devices to test.
        vii. Fixed global variable changes not reflecting in looping thread with lock and global keyword.
    b. Major update : Converted Global state into state machine class, passing the object in order to change it, with locks on every operation
    c. Dict to track server status for peers added to Game State. Can use this to populate "Join" page.
    d. Server refresh now only

CURRENTLY WORKING ON :  server refresh (peer refresh?) only deletes if user doesn't exist, or else just updates server status
                        Test all changes, join page, login, logout, dupe detection, multiple retries etc.
                        List hostnames in "Join" page based on peer server list.
                        Set up proper versioning in git.
Useful
======
TCP dump :
for multicast -
sudo tcpdump -i wlan0 -s0 -vv net 224.0.0.0/4
for all udp -
sudo tcpdump -i wlan0 -n udp
all UDP packets

Netcat
UDP
Listener : nc -ul 6111
Sender : nc -u <listener> 6111
then type something

Socat loopback broadcast on same system. Doesn't seem to work with 255, but can test on another system.
Send : socat - udp-sendto:127.255.255.255:3000,broadcast
Receive : socat -u udp-recv:3000,reuseaddr -
