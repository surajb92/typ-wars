OUTLINE | WIP Notes
===================

Progress:
1. Start with entering a username in Login window
2. Implement server discovery.
    a. Popup message urging player to wait 2 seconds set up.
    b. Set up screen to wait 1.5 seconds while it searches for peers.
    c. System will be set to client if no other peer working as server.
    d. Screen will move to server selection frame if there is already a server in the network.
    e. If username already exists, a warning will popup, exit login function & clear username field.
    f. Removed multicast loop to avoid duplicate username shenanigans, but now requires at least 2 devices to test.
    g. Fixed global variable changes not reflecting in looping thread with lock and global keyword.
    h. Encountered peer_shout loop when facing duplicate username, implemented dirty fix.
3. Major update : Converted Global state into state machine class, passing the object in order to change it, with locks on every operation
4. Dict to track server status for peers added to Game State. Can use this to populate "Join" page.
5. Peer server status will now be refreshed once login is completed.
6. Peers with server roles logging out and logging back in updates the "client page" list immediately.
7. Versioning with tags set up in git.
8. Added a small timeout to listener threads, they should now shutdown gracefully. Tests with 2nd laptop show no noticeable difference.
9. Skeletal main game loop framework implemented. Word spawning, typing, checking, deletion if word matches, working well.
10. Text communication in lobby working. Send and receive gameloops in 2 different threads.
11. Peer disconnection handler set up to gracefully exit peer connectivity threads.
12. Disconnect call added to logout function.

CURRENTLY WORKING ON    : Clean up UI, Ready checkbox, skeletal game with 2 players.

Useful
======
TCP dump :
for multicast -
sudo tcpdump -i wlan0 -s0 -vv net 224.0.0.0/4
for all udp -
sudo tcpdump -i wlan0 -n udp
all UDP packets

Netcat
UDP
Listener : nc -ul 6111
Sender : nc -u <listener> 6111
then type something

Socat loopback broadcast on same system. Doesn't seem to work with 255, but can test on another system.
Send : socat - udp-sendto:127.255.255.255:3000,broadcast
Receive : socat -u udp-recv:3000,reuseaddr -
